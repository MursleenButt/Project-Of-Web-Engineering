@page "/Edit/{Id}"
@using Data
@using Model
@inject CustomerService CustomerService
@inject NavigationManager NavigationManager

<h2>Edit Customer</h2>
<hr />

<EditForm Model="@obj" OnValidSubmit="@UpdateCustomer">
    <DataAnnotationsValidator />

    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <label for="FirstName" class="control-label">First Name</label>
                <InputText id="FirstName" class="form-control" @bind-Value="obj.FirstName" />
                <ValidationMessage For="@(() => obj.FirstName)" />
            </div>

            <div class="form-group">
                <label for="LastName" class="control-label">Last Name</label>
                <InputText id="LastName" class="form-control" @bind-Value="obj.LastName" />
                <ValidationMessage For="@(() => obj.LastName)" />
            </div>

            <div class="form-group">
                <label for="ProductName" class="control-label">Product Name</label>
                <InputText id="ProductName" class="form-control" @bind-Value="obj.ProductName" />
                <ValidationMessage For="@(() => obj.ProductName)" />
            </div>

            <div class="form-group">
                <label for="ProductQuantity" class="control-label">Product Quantity</label>
                <InputNumber id="ProductQuantity" class="form-control" @bind-Value="obj.ProductQuantity" />
                <ValidationMessage For="@(() => obj.ProductQuantity)" />
            </div>

            <div class="form-group">
                <label for="ShippingCost" class="control-label">Shipping Cost</label>
                <InputNumber id="ShippingCost" class="form-control" @bind-Value="obj.ShippingCost" />
                <ValidationMessage For="@(() => obj.ShippingCost)" />
            </div>

            <div class="form-group">
                <label for="TotalBill" class="control-label">Total Bill</label>
                <InputNumber id="TotalBill" class="form-control" @bind-Value="obj.TotalBill" />
                <ValidationMessage For="@(() => obj.TotalBill)" />
            </div>

            <div class="form-group">
                <label for="Address" class="control-label">Address</label>
                <InputText id="Address" class="form-control" @bind-Value="obj.Address" />
                <ValidationMessage For="@(() => obj.Address)" />
            </div>

            <div class="form-group">
                <label for="Discription" class="control-label">Discription</label>
                <InputText id="Discription" class="form-control" @bind-Value="obj.Discription" />
                <ValidationMessage For="@(() => obj.Discription)" />
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <button type="submit" class="btn btn-primary">Update</button>
                <button type="button" class="btn btn-primary" @onclick="@Cancel">Cancel</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public string Id { get; set; }
    private Customer obj = new Customer();
    private EditContext editContext;

    protected override async Task OnInitializedAsync()
    {
        obj = await Task.Run(() => CustomerService.GetCustomerById(Convert.ToInt32(Id)));
        // Initialize EditContext
        editContext = new EditContext(obj);
    }

    private async Task UpdateCustomer()
    {
        // Check if the form is valid before submitting
        if (editContext.Validate())
        {
            await CustomerService.UpdateCustomer(obj);
            NavigationManager.NavigateTo("List");
        }
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("List");
    }
}